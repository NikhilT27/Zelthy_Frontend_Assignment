{"version":3,"sources":["images/envelope.svg","images/telephone.svg","images/www.svg","images/heart.svg","images/pen.svg","images/trash.svg","images/emptyHeart.svg","images/close.svg","components/EachUser.js","components/Loading.js","components/Users.js","App.js","reportWebVitals.js","index.js"],"names":["EachUser","data","useState","name","email","phone","website","userData","setUserData","formData","setFormData","liked","setLiked","openModal","setOpenModal","onChange","event","prevState","target","value","getFormData","Object","keys","length","constructor","className","src","envelope","alt","telephone","www","onClick","heart","emptyHeart","class","pen","close","onSubmit","preventDefault","type","placeholder","trash","Loading","Users","useEffect","fetchUserData","a","axios","get","response","map","user","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b5a88f19.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/envelope.8735bd6f.svg\";","export default __webpack_public_path__ + \"static/media/telephone.ca5045ec.svg\";","export default __webpack_public_path__ + \"static/media/www.f9484175.svg\";","export default __webpack_public_path__ + \"static/media/heart.8d10903a.svg\";","export default __webpack_public_path__ + \"static/media/pen.4fa8f48b.svg\";","export default __webpack_public_path__ + \"static/media/trash.40317f13.svg\";","export default __webpack_public_path__ + \"static/media/emptyHeart.4ca441db.svg\";","export default __webpack_public_path__ + \"static/media/close.1eba4c86.svg\";","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport envelope from \"../images/envelope.svg\";\nimport telephone from \"../images/telephone.svg\";\nimport www from \"../images/www.svg\";\nimport heart from \"../images/heart.svg\";\nimport pen from \"../images/pen.svg\";\nimport trash from \"../images/trash.svg\";\nimport emptyHeart from \"../images/emptyHeart.svg\";\nimport close from \"../images/close.svg\";\n\nexport default function EachUser({ data }) {\n  const [userData, setUserData] = useState({\n    name: data.name,\n    email: data.email,\n    phone: data.phone,\n    website: data.website,\n  });\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    website: \"\",\n  });\n\n  const [liked, setLiked] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n\n  function onChange(event) {\n    setFormData((prevState) => ({\n      ...prevState,\n      [event.target.name]: event.target.value,\n    }));\n  }\n\n  function getFormData(name) {\n    return formData[name] !== \"\" ? formData[name] : userData[name];\n  }\n\n  function onFormSubmit(event) {\n    event.preventDefault();\n    let name = getFormData(\"name\");\n    let email = getFormData(\"email\");\n    let phone = getFormData(\"phone\");\n    let website = getFormData(\"website\");\n\n    setUserData({\n      name,\n      email,\n      phone,\n      website,\n    });\n  }\n\n  if (Object.keys(userData).length === 0 && userData.constructor === Object) {\n    return <></>;\n  } else {\n    return (\n      <div className=\"each-user-box\">\n        <div className=\"each-user-profile-box\">\n          <img\n            src={`https://avatars.dicebear.com/v2/avataaars/${userData.name}.svg?mood[]=happy`}\n            className=\"each-user-profile-img\"\n          />\n        </div>\n\n        <div className=\"each-user-main-data\">\n          <h3>{userData.name}</h3>\n\n          <ul>\n            <li>\n              <div className=\"each-user-detail-box\">\n                <img src={envelope} alt=\"\" className=\"each-user-symbol\" />\n                <span className=\"each-user-detail\">{userData.email}</span>\n              </div>\n            </li>\n            <li>\n              <div className=\"each-user-detail-box\">\n                <img src={telephone} alt=\"\" className=\"each-user-symbol\" />\n                <span className=\"each-user-detail\">{userData.phone}</span>\n              </div>\n            </li>\n            <li>\n              <div className=\"each-user-detail-box\">\n                <img src={www} alt=\"\" className=\"each-user-symbol\" />\n                <span className=\"each-user-detail\">\n                  http://{userData.website}\n                </span>\n              </div>\n            </li>\n          </ul>\n        </div>\n\n        <div className=\"each-user-option\">\n          <button\n            className=\"each-user-option-button\"\n            onClick={() => setLiked(!liked)}\n          >\n            {liked ? (\n              <img src={heart} alt=\"\" className=\"each-user-symbol\" />\n            ) : (\n              <img src={emptyHeart} alt=\"\" className=\"each-user-symbol\" />\n            )}\n          </button>\n          <div class=\"each-user-option-vertical-line\"></div>\n          <button\n            className=\"each-user-option-button\"\n            onClick={() => setOpenModal(!openModal)}\n          >\n            <img src={pen} alt=\"\" className=\"each-user-symbol\" />\n          </button>\n          {openModal ? (\n            <div className=\"modal-box\">\n              <div className=\"modal-content\">\n                <div className=\"modal-title\">\n                  <h3>Basic Modal</h3>\n                  <button onClick={() => setOpenModal(!openModal)}>\n                    <img src={close} alt=\"\" className=\"modal-close\" />\n                  </button>\n                </div>\n                <form onSubmit={onFormSubmit} className=\"modal-form\">\n                  <div className=\"modal-form-option\">\n                    <label>\n                      {formData.name === \"\" ? (\n                        <span className=\"modal-form-warning\">* </span>\n                      ) : (\n                        <></>\n                      )}\n                      Name:{\" \"}\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"name\"\n                      value={formData.name}\n                      placeholder={userData.name}\n                      onChange={onChange}\n                      className=\"modal-form-input\"\n                    ></input>\n                  </div>\n                  <div className=\"modal-form-option\">\n                    <label>\n                      {formData.email === \"\" ? (\n                        <span className=\"modal-form-warning\">* </span>\n                      ) : (\n                        <></>\n                      )}\n                      Email:{\" \"}\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"email\"\n                      value={formData.email}\n                      placeholder={userData.email}\n                      onChange={onChange}\n                      className=\"modal-form-input\"\n                    ></input>\n                  </div>\n                  <div className=\"modal-form-option\">\n                    <label>\n                      {formData.phone === \"\" ? (\n                        <span className=\"modal-form-warning\">* </span>\n                      ) : (\n                        <></>\n                      )}\n                      Phone:{\" \"}\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"phone\"\n                      value={formData.phone}\n                      placeholder={userData.phone}\n                      onChange={onChange}\n                      className=\"modal-form-input\"\n                    ></input>\n                  </div>\n                  <div className=\"modal-form-option\">\n                    <label>\n                      {formData.website === \"\" ? (\n                        <span className=\"modal-form-warning\">* </span>\n                      ) : (\n                        <></>\n                      )}\n                      Website:{\" \"}\n                    </label>\n                    <input\n                      type=\"text\"\n                      name=\"website\"\n                      value={formData.website}\n                      placeholder={userData.website}\n                      onChange={onChange}\n                      className=\"modal-form-input\"\n                    ></input>\n                  </div>\n                  <div className=\"modal-form-submit\">\n                    <button\n                      onClick={() => setOpenModal(!openModal)}\n                      className=\"modal-form-button modal-cancel\"\n                    >\n                      Cancel\n                    </button>\n                    <button\n                      type=\"submit\"\n                      className=\"modal-form-button modal-ok\"\n                    >\n                      OK\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          ) : (\n            <></>\n          )}\n          <div class=\"each-user-option-vertical-line\"></div>\n          <button\n            className=\"each-user-option-button\"\n            onClick={() => setUserData({})}\n          >\n            <img src={trash} alt=\"\" className=\"each-user-symbol\" />\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\n\nexport default function Loading() {\n  return (\n    <>\n      <div className=\"loading-box\">\n        <div className=\"spinner\">\n          <div className=\"double-bounce1\"></div>\n          <div className=\"double-bounce2\"></div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport EachUser from \"./EachUser\";\nimport Loading from \"./Loading\";\n\nexport default function Users() {\n  const [userData, setUserData] = useState([]);\n\n  useEffect(() => {\n    fetchUserData();\n  }, []);\n\n  const fetchUserData = async () => {\n    const response = await axios.get(\n      \"https://jsonplaceholder.typicode.com/users\"\n    );\n\n    if (response) {\n      setUserData(response.data);\n    }\n  };\n\n  return (\n    <div className=\"users-box\">\n      {userData.length === 0 ? (\n        <Loading />\n      ) : (\n        userData.map((user) => {\n          return <EachUser key={user.id} data={user} />;\n        })\n      )}\n    </div>\n  );\n}\n","import Users from \"./components/Users\";\n\nfunction App() {\n  return (\n    <>\n      <Users />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./style.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}